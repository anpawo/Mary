//
// EPITECH PROJECT, 2025
// Glados
// File description:
// Mary Standard library - math
//

import std

operator ** precedence 8 (number n, number power) -> number {
    if power == 0 then
    {
        return 1;
    }
    else
    {
        return n * n ** (power - 1);
    }
}

function pow(number n, number power) -> number {
    return n ** power;
}

function abs(number n) -> number {
    if n < 0 then
    {
        return 0 - n;
    }
    return n;
}

function even(number n) -> bool {
    if n % 2 == 0 then
    {
        return true;
    }
    return false;
}

function odd(number n) -> bool {
    if n % 2 == 1 then
    {
        return true;
    }
    return false;
}

function min(number a, number b) -> number {
    if a <= b then
    {
        return a;
    }
    return b;
}

function max(number a, number b) -> number {
    if a >= b then
    {
        return a;
    }
    return b;
}

function factorial(int n) -> int {
    if n < 2 then
    {
        return 1;
    }
    else
    {
        return n * factorial(n - 1);
    }
}

function fibonacci(int n) -> int {
    if n == 0 then
    {
        return 0;
    }
    if n == 1 then
    {
        return 1;
    }
    return fibonacci(n - 1) + fibonacci(n - 2);
}
