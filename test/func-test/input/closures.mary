// 
// 
// 
// 

function closure_plus() -> (int, int) -> int {
    return (+);
}

function return_closure(c: (int, int) -> int) -> (int, int) -> int {
    return c;
}

function use_closure(f: (int, int) -> int) -> int {
    return f(1, 4);
}

function main() -> void {
    // inside
    print(use_closure((+)));
    print(use_closure(closure_plus()));
    plus: (int, int) -> int = (+);
    print(plus(1, 2));

    // call
    print2: (any) -> void = (print);
    print2("lol");

    exit(0);

    // -- hard case where we need to handle the call of the function without it being set in a variable
    // -- the parsing doens't allow it for now and will probably never.
    // print(return_closure((+))(1, 2));
}
